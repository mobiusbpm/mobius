<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mobius.idm.engine.impl.persistence.entity.UserEntityImpl">

  <!-- USER INSERT -->

  <insert id="insertUser" parameterType="mobius.idm.engine.impl.persistence.entity.UserEntityImpl">
    insert into ${prefix}MBS_USER_ACCOUNT (ID_, USER_LOGIN_NAME, USER_EMAIL, USER_PASSWORD, USER_STATUS_CODE_ID,USER_AUTH_TYPE_CODE_ID,
    USER_CREATED_BY, USER_CREATED_TIME, USER_UPDATED_BY, USER_UPDATED_TIME)
    values (
      #{id ,jdbcType=VARCHAR},
      #{loginName ,jdbcType=VARCHAR},
      #{email ,jdbcType=VARCHAR},
      #{password ,jdbcType=VARCHAR},
      #{statusCodeId ,jdbcType=VARCHAR},
      #{authTypeCodeId ,jdbcType=VARCHAR},
      #{createdBy ,jdbcType=VARCHAR},
      #{createdTime, jdbcType=TIMESTAMP},
      #{updatedBy ,jdbcType=VARCHAR},
      #{updatedTime, jdbcType=TIMESTAMP}
    )
  </insert>

  <insert id="bulkInsertUser" parameterType="java.util.List">
    INSERT INTO ${prefix}MBS_USER_ACCOUNT (ID_, USER_LOGIN_NAME, USER_EMAIL, USER_PASSWORD, USER_STATUS_CODE_ID,USER_AUTH_TYPE_CODE_ID,
    USER_CREATED_BY, USER_CREATED_TIME, USER_UPDATED_BY, USER_UPDATED_TIME) VALUES
      <foreach collection="list" item="user" index="index" separator=",">
        (
        #{id ,jdbcType=VARCHAR},
        #{loginName ,jdbcType=VARCHAR},
        #{email ,jdbcType=VARCHAR},
        #{password ,jdbcType=VARCHAR},
        #{statusCodeId ,jdbcType=VARCHAR},
        #{authTypeCodeId ,jdbcType=VARCHAR},
        #{createdBy ,jdbcType=VARCHAR},
        #{createdTime, jdbcType=TIMESTAMP},
        #{updatedBy ,jdbcType=VARCHAR},
        #{updatedTime, jdbcType=TIMESTAMP}
        )
      </foreach>
  </insert>

  <insert id="bulkInsertUser" databaseId="oracle" parameterType="java.util.List">
    INSERT ALL
      <foreach collection="list" item="user" index="index">
        INTO ${prefix}MBS_USER_ACCOUNT (ID_, USER_LOGIN_NAME, USER_EMAIL, USER_PASSWORD, USER_STATUS_CODE_ID,USER_AUTH_TYPE_CODE_ID,
        USER_CREATED_BY, USER_CREATED_TIME, USER_UPDATED_BY, USER_UPDATED_TIME) VALUES
        (
        #{id ,jdbcType=VARCHAR},
        #{loginName ,jdbcType=VARCHAR},
        #{email ,jdbcType=VARCHAR},
        #{password ,jdbcType=VARCHAR},
        #{statusCodeId ,jdbcType=VARCHAR},
        #{authTypeCodeId ,jdbcType=VARCHAR},
        #{createdBy ,jdbcType=VARCHAR},
        #{createdTime, jdbcType=TIMESTAMP},
        #{updatedBy ,jdbcType=VARCHAR},
        #{updatedTime, jdbcType=TIMESTAMP}
        )
      </foreach>
    SELECT * FROM dual
  </insert>

  <!-- USER UPDATE -->

  <update id="updateUser" parameterType="mobius.idm.engine.impl.persistence.entity.UserEntityImpl">
    update ${prefix}MBS_USER_ACCOUNT set
      <if test="originalPersistentState.loginName != loginName">
        USER_LOGIN_NAME = #{loginName, jdbcType=VARCHAR},
      </if>
      <if test="originalPersistentState.email != email">
        USER_EMAIL = #{email ,jdbcType=VARCHAR},
      </if>
      <if test="originalPersistentState.password != password">
        USER_PASSWORD = #{password ,jdbcType=VARCHAR}
      </if>
    ID_=ID_
    where ID_ = #{id}
  </update>

  <!-- USER DELETE -->

  <delete id="deleteUser" parameterType="mobius.idm.engine.impl.persistence.entity.UserEntityImpl">
    delete from ${prefix}MBS_USER_ACCOUNT where ID_ = #{id}
  </delete>

  <!-- USER RESULTMAP -->
  <resultMap id="userResultMap" type="mobius.idm.engine.impl.persistence.entity.UserEntityImpl">
    <id property="id" column="ID_" jdbcType="VARCHAR" />
    <result property="loginName" column="USER_LOGIN_NAME" jdbcType="VARCHAR" />
    <result property="email" column="USER_EMAIL" jdbcType="VARCHAR" />
    <result property="password" column="USER_PASSWORD" jdbcType="VARCHAR" />
    <result property="statusCodeId" column="USER_STATUS_CODE_ID" jdbcType="INTEGER" />
    <result property="authTypeCodeId" column="USER_AUTH_TYPE_CODE_ID" jdbcType="INTEGER" />
    <result property="createdBy" column="USER_CREATED_BY" jdbcType="VARCHAR" />
    <result property="createdTime" column="USER_CREATED_TIME" jdbcType="TIMESTAMP" />
    <result property="updatedBy" column="USER_UPDATED_BY"  jdbcType="VARCHAR" />
    <result property="updatedTime" column="USER_UPDATED_TIME" jdbcType="TIMESTAMP" />
  </resultMap>
  <!-- USER SELECT -->

  <select id="selectUser" parameterType="string" resultMap="userResultMap">
    select * from ${prefix}MBS_USER_ACCOUNT where ID_ = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectUserByQueryCriteria" parameterType="mobius.idm.engine.impl.UserQueryImpl" resultMap="userResultMap">
  	<if test="firstResult != null and firstResult &gt;= 0">${limitBefore}</if>
    select RES.* <if test="firstResult != null and firstResult &gt;= 0">${limitBetween}</if>
    <include refid="selectUserByQueryCriteriaSql" />
    ${orderBy}
    <if test="firstResult != null and firstResult &gt;= 0">${limitAfter}</if>
  </select>

  <select id="selectUserCountByQueryCriteria" parameterType="mobius.idm.engine.impl.UserQueryImpl" resultType="long">
    select count(RES.ID_)
    <include refid="selectUserByQueryCriteriaSql" />
  </select>

  <sql id="selectUserByQueryCriteriaSql">
    from ${prefix}MBS_USER_ACCOUNT RES
    <where>
      <if test="id != null">
        RES.ID_ = #{id}
      </if>
      <if test="ids != null &amp;&amp; ids.size() &gt; 0">
        and RES.ID_ IN
        <foreach item="id" index="index" collection="ids"
                 open="(" separator="," close=")">
          #{id}
        </foreach>
      </if>
      <if test="idIgnoreCase != null">
        and lower(RES.ID_) = #{idIgnoreCase}
      </if>
      <if test="loginName != null">
        and RES.USER_LOGIN_NAME = #{loginName}
      </if>
      <if test="loginNameLike != null">
        and RES.USER_LOGIN_NAME like #{loginNameLike}${wildcardEscapeClause}
      </if>
      <if test="email != null">
        and RES.USER_EMAIL = #{email}
      </if>
      <if test="emailLike != null">
        and RES.USER_EMAIL like #{emailLike}${wildcardEscapeClause}
      </if>
    </where>
  </sql>

  <select id="selectUserByNativeQuery" parameterType="java.util.Map" resultMap="userResultMap">
    <include refid="mobius.idm.engine.db.common.selectByNativeQuery"/>
  </select>

  <select id="selectUserCountByNativeQuery" parameterType="java.util.Map" resultType="long">
    ${sql}
  </select>

  <select id="selectUsersWithPrivilegeId" parameterType="string" resultMap="userResultMap">
    select RES.* from ${prefix}MBS_USER_ACCOUNT RES
    inner join ${prefix}ACT_ID_PRIV_MAPPING MAPPING on MAPPING.ID_ = RES.ID_
    inner join ${prefix}ACT_ID_PRIV PRIV on PRIV.ID_ = MAPPING.PRIV_ID_
    where PRIV.ID_ = #{parameter}
    order by RES.LAST_
  </select>

</mapper>
